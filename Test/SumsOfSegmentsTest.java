import org.junit.After;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.PrintStream;

import static org.junit.Assert.*;

/**
 * Класс SumsOfSegmentsTest
 *
 * @author Evgeniy Zaytsev
 * @version 1.0
 */
public class SumsOfSegmentsTest {
    private final ByteArrayOutputStream output = new ByteArrayOutputStream();

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(output));
        }

        @Test
        public void test1() {
            SumsOfSegments s = new SumsOfSegments();
            String input = "4 10\n"
                    + "1 2 3 4\n"
                    + "1 1\n"
                    + "1 2\n"
                    + "1 3\n"
                    + "1 4\n"
                    + "2 2\n"
                    + "2 3\n"
                    + "2 4\n"
                    + "3 3\n"
                    + "3 4\n"
                    + "4 4\n";
            InputStream in = new ByteArrayInputStream(input.getBytes());
            System.setIn(in);
            s.solution();
            assertEquals("1\n"
                    + "3\n"
                    + "6\n"
                    + "10\n"
                    + "2\n"
                    + "5\n"
                    + "9\n"
                    + "3\n"
                    + "7\n"
                    + "4\n", output.toString());
        }

        @Test
        public void test2() {
            SumsOfSegments s = new SumsOfSegments();
            String input = "91 91 \n" +
                    "105683646 605067081 691135177 298625085 9405392 692218201 566695252 546476837 888742562 636706869 8355872 127639706 83232744 456120475 987587482 539527333 685955437 255393919 959223431 509942721 462772879 482190214 893534847 327148384 402308798 477655436 536875629 187426406 681497088 452076318 99089681 386265516 651944304 522098689 627665790 936108158 936198586 755827113 698718620 89876766 684470177 624745411 600877223 551375167 321138810 120742059 217361326 564633738 143586478 5457910 306298901 879398684 970659900 490233578 688684051 969373190 814027572 95376129 893929781 782039500 202517053 529099882 286043865 42622695 56600848 736382600 978533044 746947651 757816058 291628657 678669133 487467969 772507486 104550768 791110271 231135414 507588657 583813507 830843899 735138410 957350012 772739037 224743363 793514651 685739742 74003301 823654576 784621559 218707464 419645750 339165422 \n" +
                    "32 77\n" +
                    "8 23\n" +
                    "31 44\n" +
                    "90 91\n" +
                    "51 79\n" +
                    "1 62\n" +
                    "5 10\n" +
                    "42 82\n" +
                    "50 66\n" +
                    "28 79\n" +
                    "30 84\n" +
                    "24 34\n" +
                    "37 61\n" +
                    "2 82\n" +
                    "63 89\n" +
                    "8 62\n" +
                    "13 30\n" +
                    "45 88\n" +
                    "25 87\n" +
                    "26 55\n" +
                    "17 44\n" +
                    "53 60\n" +
                    "15 31\n" +
                    "46 76\n" +
                    "16 85\n" +
                    "3 14\n" +
                    "5 63\n" +
                    "15 60\n" +
                    "65 80\n" +
                    "20 70\n" +
                    "49 73\n" +
                    "28 75\n" +
                    "37 57\n" +
                    "45 71\n" +
                    "1 91\n" +
                    "50 69\n" +
                    "49 53\n" +
                    "13 61\n" +
                    "5 48\n" +
                    "13 49\n" +
                    "9 34\n" +
                    "13 66\n" +
                    "54 60\n" +
                    "63 79\n" +
                    "37 73\n" +
                    "13 42\n" +
                    "1 53\n" +
                    "58 91\n" +
                    "6 43\n" +
                    "26 59\n" +
                    "4 7\n" +
                    "29 76\n" +
                    "38 74\n" +
                    "19 66\n" +
                    "4 90\n" +
                    "26 53\n" +
                    "39 57\n" +
                    "28 80\n" +
                    "9 76\n" +
                    "68 76\n" +
                    "21 77\n" +
                    "14 90\n" +
                    "59 72\n" +
                    "37 45\n" +
                    "50 58\n" +
                    "13 42\n" +
                    "20 31\n" +
                    "16 49\n" +
                    "14 22\n" +
                    "23 37\n" +
                    "61 90\n" +
                    "25 33\n" +
                    "2 23\n" +
                    "23 45\n" +
                    "33 55\n" +
                    "8 57\n" +
                    "25 67\n" +
                    "38 62\n" +
                    "1 74\n" +
                    "2 51\n" +
                    "18 65\n" +
                    "59 67\n" +
                    "5 55\n" +
                    "14 68\n" +
                    "52 57\n" +
                    "18 41\n" +
                    "4 47\n" +
                    "76 84\n" +
                    "42 51\n" +
                    "6 81\n" +
                    "13 26\n";
            InputStream in = new ByteArrayInputStream(input.getBytes());
            System.setIn(in);
            s.solution();
            assertEquals("24530335178\n" +
                    "8523403328\n" +
                    "8165261201\n" +
                    "758811172\n" +
                    "16505900743\n" +
                    "31717040964\n" +
                    "3340245113\n" +
                    "22121046324\n" +
                    "8748746139\n" +
                    "27365082077\n" +
                    "29979644056\n" +
                    "4724386249\n" +
                    "13407547723\n" +
                    "42960847299\n" +
                    "14954474637\n" +
                    "28748211130\n" +
                    "9380469541\n" +
                    "23730325715\n" +
                    "33848805032\n" +
                    "15208987513\n" +
                    "15479262708\n" +
                    "5704323701\n" +
                    "8940206003\n" +
                    "15635436191\n" +
                    "38066836320\n" +
                    "5005354172\n" +
                    "30302573840\n" +
                    "25269319130\n" +
                    "9290734372\n" +
                    "26469823881\n" +
                    "13605902615\n" +
                    "25211700600\n" +
                    "11433685260\n" +
                    "13569803093\n" +
                    "47430326773\n" +
                    "11232042892\n" +
                    "2305401873\n" +
                    "26011189402\n" +
                    "22245847366\n" +
                    "18913193153\n" +
                    "12701312740\n" +
                    "27661939292\n" +
                    "4733663801\n" +
                    "8884262522\n" +
                    "19771867611\n" +
                    "16393478352\n" +
                    "26251760228\n" +
                    "18216248154\n" +
                    "20461190874\n" +
                    "17981694185\n" +
                    "1566943930\n" +
                    "25255409608\n" +
                    "18940219793\n" +
                    "24654121902\n" +
                    "45689275447\n" +
                    "14030069884\n" +
                    "9741659561\n" +
                    "28100220487\n" +
                    "35163750752\n" +
                    "4861833407\n" +
                    "29532910858\n" +
                    "41831176927\n" +
                    "7470298736\n" +
                    "5263227873\n" +
                    "5219509915\n" +
                    "16393478352\n" +
                    "5512518401\n" +
                    "17386252452\n" +
                    "5338713891\n" +
                    "8117893630\n" +
                    "16105737322\n" +
                    "3875139176\n" +
                    "11386549516\n" +
                    "12444922917\n" +
                    "12388101439\n" +
                    "26245248785\n" +
                    "21997842470\n" +
                    "13000449019\n" +
                    "37656811738\n" +
                    "24296017998\n" +
                    "24173133221\n" +
                    "4507769268\n" +
                    "25730166868\n" +
                    "29304187243\n" +
                    "4812376975\n" +
                    "13016309470\n" +
                    "21979838713\n" +
                    "5636866950\n" +
                    "3456217023\n" +
                    "40583875527\n" +
                    "7522594100\n", output.toString());
        }

        @After
        public void cleanUpStreams() {
            System.setOut(null);
            System.setIn(null);
        }
}